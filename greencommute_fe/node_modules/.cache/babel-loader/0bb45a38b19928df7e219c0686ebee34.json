{"ast":null,"code":"import _defineProperty from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{FormGroup,Grid,Typography,makeStyles}from\"@material-ui/core\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import CheckBox from\"../../atom/CheckBox/CheckBox\";import Button from\"../../atom/button/Button\";import{connect}from\"react-redux\";import actions from\"../../../store/actions\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{label:{fontSize:\"14px\"},formLabel:{height:\"2rem\"},gridMargin:{marginTop:\"1.5rem\"},textMargin:{margin:\"1rem 0\",paddingRight:\"13px\"}};});var FilterGroup=function FilterGroup(props){var data=props.data,applyFilter=props.applyFilter,closeDialog=props.closeDialog,jobs=props.jobs,addAdvancedFilteredJobs=props.addAdvancedFilteredJobs,removeAdvancedFilterJobs=props.removeAdvancedFilterJobs,setSnackMessage=props.setSnackMessage,removeAdvancedFilters=props.removeAdvancedFilters;var _useState=useState(\"Yes\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),filteredData=_useState4[0],setFilteredData=_useState4[1];var classes=useStyles();var handleOnChange=function handleOnChange(label,group){var newData=filteredData.map(function(obj){if(obj.title===group&&obj.title!==\"Green Commute\"){var newLabels=obj.labels.map(function(item){if(item.label===label){return _objectSpread(_objectSpread({},item),{},{isChecked:!item.isChecked});}return _objectSpread({},item);});return _objectSpread(_objectSpread({},obj),{},{labels:_toConsumableArray(newLabels)});}if(obj.title===group&&obj.title===\"Green Commute\"){var _newLabels=obj.labels.map(function(item){return _objectSpread(_objectSpread({},item),{},{isChecked:item.label!==value});});return _objectSpread(_objectSpread({},obj),{},{labels:_toConsumableArray(_newLabels)});}return _objectSpread({},obj);});setFilteredData(newData);};var handleOnApply=function handleOnApply(){applyFilter(filteredData);var keyLabelObjectsList=[];var filterInputObject={experience:[],jobType:[],isGreenCommute:[]};var labelsArray=[];filteredData.map(function(obj){obj.labels.forEach(function(item){if(item.isChecked){keyLabelObjectsList.push(_objectSpread(_objectSpread({},obj.title),{},{titleLabel:obj.title.label},item));if(obj.title.key){if(obj.title.key===\"isGreenCommute\"){labelsArray.push(item.isChecked);}else{labelsArray.push(item.label);}filterInputObject=_objectSpread(_objectSpread({},filterInputObject),{},_defineProperty({},obj.title.key,labelsArray));}}});labelsArray=[];});keyLabelObjectsList=_toConsumableArray(new Set(keyLabelObjectsList));var getFilteredJobs=function getFilteredJobs(){// let greenJobs;\n// if (filterInputObject.isGreenCommute.length) {\n//   greenJobs = jobs.filter(\n//     (item) => item.isGreenCommute === filterInputObject.isGreenCommute[0]\n//   );\n// } else {\n//   greenJobs = jobs.filter((item) => item.isGreenCommute === false);\n// }\nvar jobTypes=jobs.filter(function(item){return filterInputObject.jobType.includes(item.jobType);});if(jobTypes.length!==0){jobTypes.filter(function(item){return filterInputObject.experience.includes(item.experience);});return jobTypes;}else{var greenJobs=jobs.filter(function(item){return filterInputObject.experience.includes(item.experience);});return greenJobs;}// if (jobtypes.length === 0) return jobTypes;\n// const finalFilter = jobtypes.filter((item) =>\n//   filterInputObject.experience.includes(item.experience)\n// );\n// if (finalFilter.length === 0) return jobtypes;\n// return finalFilter;\n};var filteredJobs=getFilteredJobs();console.log(\"jobTypes\",filteredJobs);if(filteredJobs.length!==0){addAdvancedFilteredJobs(filteredJobs);}else{setSnackMessage(\"No Jobs Found based on the Advanced Filters\");}closeDialog();};var handleOnClear=function handleOnClear(){removeAdvancedFilterJobs([]);removeAdvancedFilters();closeDialog();};return/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,direction:\"row\",justify:\"space-evenly\",children:filteredData.slice(0,3).map(function(obj,idx){return/*#__PURE__*/_jsx(Grid,{item:true,justify:\"flex-start\",children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Typography,{className:classes.textMargin,children:obj.title.label}),obj.labels.map(function(item,innerIdx){return/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(CheckBox,{checked:item.isChecked,onChange:function onChange(event){return handleOnChange(event.target.name,obj.title);}}),label:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:classes.label,children:item.label}),className:classes.formLabel,name:item.label},innerIdx);})]})},idx);})}),/*#__PURE__*/_jsx(Grid,{container:true,item:true,direction:\"row\",className:classes.gridMargin,justify:\"space-evenly\",children:filteredData.slice(3,6).map(function(obj,idx){return/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Typography,{className:classes.textMargin,children:obj.title.label}),obj.labels.map(function(item,innerIdx){return/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(CheckBox,{checked:item.isChecked,onChange:function onChange(event){return handleOnChange(event.target.name,obj.title);}}),label:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",className:classes.label,children:item.label}),variant:\"secondary\",name:item.label,className:classes.formLabel},innerIdx);})]})},idx);})}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,spacing:5,justify:\"flex-end\",alignItems:\"center\",className:classes.gridMargin,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",type:\"small\",onClick:handleOnClear,children:\"Clear all\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{type:\"small\",onClick:handleOnApply,\"data-testid\":\"ApplyFilter\",children:\"Apply\"})})]})]});};var mapStateTopProps=function mapStateTopProps(state){return{data:state.advancedFilters.filters,jobs:state.jobReducer.jobs};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{applyFilter:function applyFilter(payload){return dispatch(actions.applyAdvancedFilters(payload));},addAdvancedFilteredJobs:function addAdvancedFilteredJobs(payload){return dispatch(actions.addAdvancedFilterJobs(payload));},removeAdvancedFilterJobs:function removeAdvancedFilterJobs(payload){return dispatch(actions.removeAdvancedFilterJobs(payload));},removeAdvancedFilters:function removeAdvancedFilters(){return dispatch(actions.removeAdvancedFilters());}};};export default connect(mapStateTopProps,mapDispatchToProps)(FilterGroup);","map":{"version":3,"sources":["/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/src/components/organisms/filter-group/FilterGroup.js"],"names":["FormGroup","Grid","Typography","makeStyles","FormControlLabel","CheckBox","Button","connect","actions","useState","useStyles","theme","label","fontSize","formLabel","height","gridMargin","marginTop","textMargin","margin","paddingRight","FilterGroup","props","data","applyFilter","closeDialog","jobs","addAdvancedFilteredJobs","removeAdvancedFilterJobs","setSnackMessage","removeAdvancedFilters","value","setValue","filteredData","setFilteredData","classes","handleOnChange","group","newData","map","obj","title","newLabels","labels","item","isChecked","handleOnApply","keyLabelObjectsList","filterInputObject","experience","jobType","isGreenCommute","labelsArray","forEach","push","titleLabel","key","Set","getFilteredJobs","jobTypes","filter","includes","length","greenJobs","filteredJobs","console","log","handleOnClear","slice","idx","innerIdx","event","target","name","mapStateTopProps","state","advancedFilters","filters","jobReducer","mapDispatchToProps","dispatch","payload","applyAdvancedFilters","addAdvancedFilterJobs"],"mappings":"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","sourcesContent":["import { FormGroup, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CheckBox from \"../../atom/CheckBox/CheckBox\";\nimport Button from \"../../atom/button/Button\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../../store/actions\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontSize: \"14px\",\n  },\n  formLabel: {\n    height: \"2rem\",\n  },\n  gridMargin: {\n    marginTop: \"1.5rem\",\n  },\n  textMargin: {\n    margin: \"1rem 0\",\n    paddingRight: \"13px\",\n  },\n}));\n\nconst FilterGroup = (props) => {\n  const {\n    data,\n    applyFilter,\n    closeDialog,\n    jobs,\n    addAdvancedFilteredJobs,\n    removeAdvancedFilterJobs,\n    setSnackMessage,\n    removeAdvancedFilters,\n  } = props;\n  const [value, setValue] = useState(\"Yes\");\n  const [filteredData, setFilteredData] = useState(data);\n  const classes = useStyles();\n\n  const handleOnChange = (label, group) => {\n    const newData = filteredData.map((obj) => {\n      if (obj.title === group && obj.title !== \"Green Commute\") {\n        const newLabels = obj.labels.map((item) => {\n          if (item.label === label) {\n            return {\n              ...item,\n              isChecked: !item.isChecked,\n            };\n          }\n\n          return { ...item };\n        });\n\n        return {\n          ...obj,\n          labels: [...newLabels],\n        };\n      }\n\n      if (obj.title === group && obj.title === \"Green Commute\") {\n        const newLabels = obj.labels.map((item) => {\n          return {\n            ...item,\n            isChecked: item.label !== value,\n          };\n        });\n\n        return {\n          ...obj,\n          labels: [...newLabels],\n        };\n      }\n\n      return { ...obj };\n    });\n\n    setFilteredData(newData);\n  };\n\n  const handleOnApply = () => {\n    applyFilter(filteredData);\n\n    let keyLabelObjectsList = [];\n\n    let filterInputObject = {\n      experience: [],\n      jobType: [],\n      isGreenCommute: [],\n    };\n\n    let labelsArray = [];\n\n    filteredData.map((obj) => {\n      obj.labels.forEach((item) => {\n        if (item.isChecked) {\n          keyLabelObjectsList.push({\n            ...obj.title,\n            titleLabel: obj.title.label,\n            ...item,\n          });\n          if (obj.title.key) {\n            if (obj.title.key === \"isGreenCommute\") {\n              labelsArray.push(item.isChecked);\n            } else {\n              labelsArray.push(item.label);\n            }\n\n            filterInputObject = {\n              ...filterInputObject,\n              [obj.title.key]: labelsArray,\n            };\n          }\n        }\n      });\n      labelsArray = [];\n    });\n\n    keyLabelObjectsList = [...new Set(keyLabelObjectsList)];\n\n    const getFilteredJobs = () => {\n      // let greenJobs;\n      // if (filterInputObject.isGreenCommute.length) {\n      //   greenJobs = jobs.filter(\n      //     (item) => item.isGreenCommute === filterInputObject.isGreenCommute[0]\n      //   );\n      // } else {\n      //   greenJobs = jobs.filter((item) => item.isGreenCommute === false);\n      // }\n\n      const jobTypes = jobs.filter((item) =>\n        filterInputObject.jobType.includes(item.jobType)\n      );\n\n      if (jobTypes.length !== 0) {\n        jobTypes.filter((item) =>\n          filterInputObject.experience.includes(item.experience)\n        );\n        return jobTypes;\n      } else {\n        const greenJobs = jobs.filter((item) =>\n          filterInputObject.experience.includes(item.experience)\n        );\n        return greenJobs;\n      }\n\n      // if (jobtypes.length === 0) return jobTypes;\n\n      // const finalFilter = jobtypes.filter((item) =>\n      //   filterInputObject.experience.includes(item.experience)\n      // );\n\n      // if (finalFilter.length === 0) return jobtypes;\n\n      // return finalFilter;\n    };\n\n    const filteredJobs = getFilteredJobs();\n    console.log(\"jobTypes\", filteredJobs);\n\n    if (filteredJobs.length !== 0) {\n      addAdvancedFilteredJobs(filteredJobs);\n    } else {\n      setSnackMessage(\"No Jobs Found based on the Advanced Filters\");\n    }\n    closeDialog();\n  };\n\n  const handleOnClear = () => {\n    removeAdvancedFilterJobs([]);\n    removeAdvancedFilters();\n    closeDialog();\n  };\n\n  return (\n    <Grid container>\n      <Grid container item direction=\"row\" justify=\"space-evenly\">\n        {filteredData.slice(0, 3).map((obj, idx) => (\n          <Grid item key={idx} justify=\"flex-start\">\n            <FormGroup>\n              <Typography className={classes.textMargin}>\n                {obj.title.label}\n              </Typography>\n              {obj.labels.map((item, innerIdx) => (\n                <FormControlLabel\n                  key={innerIdx}\n                  control={\n                    <CheckBox\n                      checked={item.isChecked}\n                      onChange={(event) =>\n                        handleOnChange(event.target.name, obj.title)\n                      }\n                    />\n                  }\n                  label={\n                    <Typography variant=\"h4\" className={classes.label}>\n                      {item.label}\n                    </Typography>\n                  }\n                  className={classes.formLabel}\n                  name={item.label}\n                />\n              ))}\n            </FormGroup>\n          </Grid>\n        ))}\n      </Grid>\n      <Grid\n        container\n        item\n        direction=\"row\"\n        className={classes.gridMargin}\n        justify=\"space-evenly\"\n      >\n        {filteredData.slice(3, 6).map((obj, idx) => (\n          <Grid item key={idx}>\n            <FormGroup>\n              <Typography className={classes.textMargin}>\n                {obj.title.label}\n              </Typography>\n              {obj.labels.map((item, innerIdx) => (\n                <FormControlLabel\n                  key={innerIdx}\n                  control={\n                    <CheckBox\n                      checked={item.isChecked}\n                      onChange={(event) =>\n                        handleOnChange(event.target.name, obj.title)\n                      }\n                    />\n                  }\n                  label={\n                    <Typography variant=\"h4\" className={classes.label}>\n                      {item.label}\n                    </Typography>\n                  }\n                  variant=\"secondary\"\n                  name={item.label}\n                  className={classes.formLabel}\n                />\n              ))}\n            </FormGroup>\n          </Grid>\n        ))}\n      </Grid>\n      <Grid\n        container\n        item\n        spacing={5}\n        justify=\"flex-end\"\n        alignItems=\"center\"\n        className={classes.gridMargin}\n      >\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            type=\"small\"\n            onClick={handleOnClear}\n          >\n            Clear all\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            type=\"small\"\n            onClick={handleOnApply}\n            data-testid=\"ApplyFilter\"\n          >\n            Apply\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateTopProps = (state) => {\n  return {\n    data: state.advancedFilters.filters,\n    jobs: state.jobReducer.jobs,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    applyFilter: (payload) => dispatch(actions.applyAdvancedFilters(payload)),\n    addAdvancedFilteredJobs: (payload) =>\n      dispatch(actions.addAdvancedFilterJobs(payload)),\n    removeAdvancedFilterJobs: (payload) =>\n      dispatch(actions.removeAdvancedFilterJobs(payload)),\n    removeAdvancedFilters: () => dispatch(actions.removeAdvancedFilters()),\n  };\n};\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(FilterGroup);\n"]},"metadata":{},"sourceType":"module"}
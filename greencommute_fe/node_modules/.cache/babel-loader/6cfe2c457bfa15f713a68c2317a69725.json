{"ast":null,"code":"import React from'react';import Location from'../../atom/Location/Location';import{Avatar,makeStyles}from\"@material-ui/core\";import theme from'../../../utils/theme/theme';import Grid from'@material-ui/core/Grid';import MessageOutlinedIcon from'@material-ui/icons/MessageOutlined';import NotificationsNoneOutlinedIcon from'@material-ui/icons/NotificationsNoneOutlined';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import Typography from'@material-ui/core/Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({root:{color:theme.palette.secondary.main,width:\"20px\",height:\"80px\"},label:{fontSize:theme.typography.navtabs.fontSize,paddingLeft:\"10px\",position:\"relative\"},avatarMargin:{marginLeft:\"10px\"}});var TopHeader=function TopHeader(props){var locationLabel=props.locationLabel,profileName=props.profileName,icon=props.icon,profile=props.profile;var classes=useStyles();return/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"space-between\",\"data-testid\":\"topheader-placeholder\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(Location,{icon:icon,label:locationLabel})}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,xs:3,alignItems:\"center\",justify:\"space-evenly\",children:[/*#__PURE__*/_jsx(MessageOutlinedIcon,{className:classes.root}),/*#__PURE__*/_jsx(NotificationsNoneOutlinedIcon,{className:classes.root}),/*#__PURE__*/_jsx(Avatar,{className:classes.avatarMargin,src:profile}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.label,children:profileName}),/*#__PURE__*/_jsx(ExpandMoreIcon,{className:classes.root})]})]});};export default TopHeader;","map":{"version":3,"sources":["/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/src/components/organisms/Header/TopHeader.js"],"names":["React","Location","Avatar","makeStyles","theme","Grid","MessageOutlinedIcon","NotificationsNoneOutlinedIcon","ExpandMoreIcon","Typography","useStyles","root","color","palette","secondary","main","width","height","label","fontSize","typography","navtabs","paddingLeft","position","avatarMargin","marginLeft","TopHeader","props","locationLabel","profileName","icon","profile","classes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAsB,8BAAtB,CACA,OAASC,MAAT,CAAiBC,UAAjB,KAAmC,mBAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,oCAAhC,CACA,MAAOC,CAAAA,6BAAP,KAA0C,8CAA1C,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,CACzBQ,IAAI,CAAE,CACFC,KAAK,CAAER,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC,IAD7B,CAEFC,KAAK,CAAE,MAFL,CAGFC,MAAM,CAAE,MAHN,CADmB,CAMzBC,KAAK,CAAE,CACHC,QAAQ,CAAEf,KAAK,CAACgB,UAAN,CAAiBC,OAAjB,CAAyBF,QADhC,CAEHG,WAAW,CAAE,MAFV,CAGHC,QAAQ,CAAE,UAHP,CANkB,CAWzBC,YAAY,CAAE,CACVC,UAAU,CAAE,MADF,CAXW,CAAD,CAA5B,CAgBA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,GAAQC,CAAAA,aAAR,CAAoDD,KAApD,CAAQC,aAAR,CAAuBC,WAAvB,CAAoDF,KAApD,CAAuBE,WAAvB,CAAmCC,IAAnC,CAAoDH,KAApD,CAAmCG,IAAnC,CAAwCC,OAAxC,CAAoDJ,KAApD,CAAwCI,OAAxC,CACA,GAAMC,CAAAA,OAAO,CAAGtB,SAAS,EAAzB,CAEA,mBAEI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,UAAU,CAAC,QAA3B,CAAoC,OAAO,CAAC,eAA5C,CAA4D,cAAY,uBAAxE,wBACI,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,uBACI,KAAC,QAAD,EAAU,IAAI,CAAEoB,IAAhB,CAAsB,KAAK,CAAEF,aAA7B,EADJ,EADJ,cAII,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,SAAS,KAApB,CAAqB,EAAE,CAAE,CAAzB,CAA4B,UAAU,CAAC,QAAvC,CAAgD,OAAO,CAAC,cAAxD,wBACI,KAAC,mBAAD,EAAqB,SAAS,CAAEI,OAAO,CAACrB,IAAxC,EADJ,cAEI,KAAC,6BAAD,EAA+B,SAAS,CAAEqB,OAAO,CAACrB,IAAlD,EAFJ,cAGI,KAAC,MAAD,EAAQ,SAAS,CAAEqB,OAAO,CAACR,YAA3B,CAAyC,GAAG,CAAEO,OAA9C,EAHJ,cAII,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAEC,OAAO,CAACd,KAA/C,UAAwDW,WAAxD,EAJJ,cAKI,KAAC,cAAD,EAAgB,SAAS,CAAEG,OAAO,CAACrB,IAAnC,EALJ,GAJJ,GAFJ,CAeH,CAnBD,CA0BA,cAAee,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Location  from '../../atom/Location/Location';\nimport { Avatar, makeStyles } from \"@material-ui/core\";\nimport theme from '../../../utils/theme/theme';\nimport Grid from '@material-ui/core/Grid';\nimport MessageOutlinedIcon from '@material-ui/icons/MessageOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        color: theme.palette.secondary.main,\n        width: \"20px\",\n        height: \"80px\",\n    },\n    label: {\n        fontSize: theme.typography.navtabs.fontSize,\n        paddingLeft: \"10px\",\n        position: \"relative\",\n    },\n    avatarMargin: {\n        marginLeft: \"10px\",\n    }\n});\n\nconst TopHeader = (props) => {\n    const { locationLabel, profileName,icon,profile } = props;\n    const classes = useStyles();\n\n    return (\n\n        <Grid container alignItems=\"center\" justify=\"space-between\" data-testid=\"topheader-placeholder\">\n            <Grid item xs={3}>\n                <Location icon={icon} label={locationLabel} />\n            </Grid>\n            <Grid item container xs={3} alignItems=\"center\" justify=\"space-evenly\">\n                <MessageOutlinedIcon className={classes.root} />\n                <NotificationsNoneOutlinedIcon className={classes.root} />\n                <Avatar className={classes.avatarMargin} src={profile}></Avatar>\n                <Typography variant=\"body1\" className={classes.label} >{profileName}</Typography>\n                <ExpandMoreIcon className={classes.root} />\n            </Grid>\n        </Grid>\n    );\n};\n\nTopHeader.propTypes = {\n    locationLabel: PropTypes.string,\n    profileName: PropTypes.string,\n}\n\t\nexport default TopHeader;   "]},"metadata":{},"sourceType":"module"}
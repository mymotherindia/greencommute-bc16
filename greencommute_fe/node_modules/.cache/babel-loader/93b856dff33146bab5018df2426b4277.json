{"ast":null,"code":"import _toConsumableArray from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import AQI from\"../../components/organisms/AQI/AQI\";import LandingTemplate from\"../../components/templates/LandingTempalte/LandingTemplate\";import Stepper from\"../../components/organisms/stepper/Stepper\";import{connect}from\"react-redux\";import actions from\"../../store/actions\";import{useHistory}from\"react-router-dom\";import*as jobService from\"../../service/JobService\";import{jobResource}from\"../../service/JobService\";import{jsx as _jsx}from\"react/jsx-runtime\";function LandingPage(props){var _useState=useState(\"yourLocation\"),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var history=useHistory();var yourLocation=props.yourLocation,jobLocations=props.jobLocations,skills=props.skills,addYourLocation=props.addYourLocation,addJobLocations=props.addJobLocations,addSkills=props.addSkills,addJobs=props.addJobs;var aqiValues={Hyderabad:\"793\",Banglore:\"982\",Mumbai:\"999\",Delhi:\"676\",Chennai:\"876\",Vizag:\"545\"};var handleClick=function handleClick(step){if(step===0){setView(\"yourLocation\");}if(step===1){setView(\"jobLocations\");}else if(step===2){setView(\"skills\");}};var handleChange=function handleChange(value,accessKey,isHomeLocation){if(accessKey===\"city\"&&isHomeLocation){var newObj={number:aqiValues[value.city],showCity:false};var newYourLocation=_objectSpread(_objectSpread({},yourLocation),{},{counters:[].concat(_toConsumableArray(yourLocation.counters),[newObj]),description:\"Real - Time Air Quality Index (AQI) in this location\",yourLocation:[value]});addYourLocation(newYourLocation);}if(accessKey===\"city\"&&isHomeLocation===false){var newCounters=value.map(function(item){return{number:aqiValues[item.city],showCity:true,city:item.city};});var newJobLocations=_objectSpread(_objectSpread({},jobLocations),{},{counters:newCounters,description:\"Real - Time Air Quality Index (AQI) in this location\",jobLocation:value});addJobLocations(newJobLocations);}if(accessKey===\"skill\"){var jobRoles=value.map(function(item){return item.skill;});var jobLocation=jobLocations.jobLocation.map(function(item){return item.city;}).toString();var url=new URL(jobResource);var params=new URLSearchParams(url.search);params.set(\"city\",jobLocation);params.set(\"jobTitle\",jobRoles);var actionDispatcher=function actionDispatcher(res){var jobsFromAPI=res;var newSkills=_objectSpread(_objectSpread({},skills),{},{counters:[{number:jobsFromAPI.length,showCity:false}],description:\"Jobs found in these locations\",skills:value});addSkills(newSkills);addJobs(jobsFromAPI);localStorage.setItem(\"jobsQuery\",params.toString());};jobService.getAllJobs(params.toString(),actionDispatcher);}};var handleRoute=function handleRoute(){history.push(\"/jobsearch\");};var getDefaultValue=function getDefaultValue(){if(view===\"yourLocation\"){return props[view].yourLocation[0];}if(view===\"jobLocations\"){return props[view].jobLocation;}return props[view].skills;};return/*#__PURE__*/_jsx(LandingTemplate,{leftContainer:/*#__PURE__*/_jsx(Stepper,{handleChange:handleChange,handleClick:handleClick,handleRoute:handleRoute,defaultValue:getDefaultValue()}),rightContainer:/*#__PURE__*/_jsx(AQI,{image:props[view].image,description:props[view].description,counters:props[view].counters})});}var mapStateToProps=function mapStateToProps(state){return{yourLocation:state.onBoardingFilter.yourLocation,jobLocations:state.onBoardingFilter.jobLocations,skills:state.onBoardingFilter.skills};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addYourLocation:function addYourLocation(payload){return dispatch(actions.addYourLocation(payload));},addJobLocations:function addJobLocations(payload){return dispatch(actions.addJobLocations(payload));},addSkills:function addSkills(payload){return dispatch(actions.addSkills(payload));},addJobs:function addJobs(payload){return dispatch(actions.addJobs(payload));}};};export default connect(mapStateToProps,mapDispatchToProps)(LandingPage);","map":{"version":3,"sources":["/home/praves/new1/devops-bootcamp-jan22/BC16-green-commute/greencommute_fe/src/pages/LandingPage/LandingPage.js"],"names":["React","useState","AQI","LandingTemplate","Stepper","connect","actions","useHistory","jobService","jobResource","LandingPage","props","view","setView","history","yourLocation","jobLocations","skills","addYourLocation","addJobLocations","addSkills","addJobs","aqiValues","Hyderabad","Banglore","Mumbai","Delhi","Chennai","Vizag","handleClick","step","handleChange","value","accessKey","isHomeLocation","newObj","number","city","showCity","newYourLocation","counters","description","newCounters","map","item","newJobLocations","jobLocation","jobRoles","skill","toString","url","URL","params","URLSearchParams","search","set","actionDispatcher","res","jobsFromAPI","newSkills","length","localStorage","setItem","getAllJobs","handleRoute","push","getDefaultValue","image","mapStateToProps","state","onBoardingFilter","mapDispatchToProps","dispatch","payload"],"mappings":"ueAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,GAAP,KAAgB,oCAAhB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4DAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,4CAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,0BAA5B,CACA,OAASC,WAAT,KAA4B,0BAA5B,C,2CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CAC1B,cAAwBV,QAAQ,CAAC,cAAD,CAAhC,wCAAOW,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEA,GACEQ,CAAAA,YADF,CAQIJ,KARJ,CACEI,YADF,CAEEC,YAFF,CAQIL,KARJ,CAEEK,YAFF,CAGEC,MAHF,CAQIN,KARJ,CAGEM,MAHF,CAIEC,eAJF,CAQIP,KARJ,CAIEO,eAJF,CAKEC,eALF,CAQIR,KARJ,CAKEQ,eALF,CAMEC,SANF,CAQIT,KARJ,CAMES,SANF,CAOEC,OAPF,CAQIV,KARJ,CAOEU,OAPF,CAUA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,SAAS,CAAE,KADK,CAEhBC,QAAQ,CAAE,KAFM,CAGhBC,MAAM,CAAE,KAHQ,CAIhBC,KAAK,CAAE,KAJS,CAKhBC,OAAO,CAAE,KALO,CAMhBC,KAAK,CAAE,KANS,CAAlB,CASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC5B,GAAIA,IAAI,GAAK,CAAb,CAAgB,CACdjB,OAAO,CAAC,cAAD,CAAP,CACD,CAED,GAAIiB,IAAI,GAAK,CAAb,CAAgB,CACdjB,OAAO,CAAC,cAAD,CAAP,CACD,CAFD,IAEO,IAAIiB,IAAI,GAAK,CAAb,CAAgB,CACrBjB,OAAO,CAAC,QAAD,CAAP,CACD,CACF,CAVD,CAYA,GAAMkB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,SAAR,CAAmBC,cAAnB,CAAsC,CACzD,GAAID,SAAS,GAAK,MAAd,EAAwBC,cAA5B,CAA4C,CAC1C,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAEd,SAAS,CAACU,KAAK,CAACK,IAAP,CADJ,CAEbC,QAAQ,CAAE,KAFG,CAAf,CAKA,GAAMC,CAAAA,eAAe,gCAChBxB,YADgB,MAEnByB,QAAQ,8BAAMzB,YAAY,CAACyB,QAAnB,GAA6BL,MAA7B,EAFW,CAGnBM,WAAW,CAAE,sDAHM,CAInB1B,YAAY,CAAE,CAACiB,KAAD,CAJK,EAArB,CAOAd,eAAe,CAACqB,eAAD,CAAf,CACD,CAED,GAAIN,SAAS,GAAK,MAAd,EAAwBC,cAAc,GAAK,KAA/C,CAAsD,CACpD,GAAMQ,CAAAA,WAAW,CAAGV,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,QAAW,CACvCR,MAAM,CAAEd,SAAS,CAACsB,IAAI,CAACP,IAAN,CADsB,CAEvCC,QAAQ,CAAE,IAF6B,CAGvCD,IAAI,CAAEO,IAAI,CAACP,IAH4B,CAAX,EAAV,CAApB,CAMA,GAAMQ,CAAAA,eAAe,gCAChB7B,YADgB,MAEnBwB,QAAQ,CAAEE,WAFS,CAGnBD,WAAW,CAAE,sDAHM,CAInBK,WAAW,CAAEd,KAJM,EAArB,CAOAb,eAAe,CAAC0B,eAAD,CAAf,CACD,CAED,GAAIZ,SAAS,GAAK,OAAlB,CAA2B,CACzB,GAAMc,CAAAA,QAAQ,CAAGf,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACI,KAAf,EAAV,CAAjB,CAEA,GAAMF,CAAAA,WAAW,CAAG9B,YAAY,CAAC8B,WAAb,CACjBH,GADiB,CACb,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACP,IAAf,EADa,EAEjBY,QAFiB,EAApB,CAIA,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,GAAJ,CAAQ1C,WAAR,CAAZ,CACA,GAAM2C,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBH,GAAG,CAACI,MAAxB,CAAf,CACAF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAmBT,WAAnB,EACAM,MAAM,CAACG,GAAP,CAAW,UAAX,CAAuBR,QAAvB,EAEA,GAAMS,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CAChC,GAAMC,CAAAA,WAAW,CAAGD,GAApB,CAEA,GAAME,CAAAA,SAAS,gCACV1C,MADU,MAEbuB,QAAQ,CAAE,CAAC,CAAEJ,MAAM,CAAEsB,WAAW,CAACE,MAAtB,CAA8BtB,QAAQ,CAAE,KAAxC,CAAD,CAFG,CAGbG,WAAW,CAAE,+BAHA,CAIbxB,MAAM,CAAEe,KAJK,EAAf,CAOAZ,SAAS,CAACuC,SAAD,CAAT,CACAtC,OAAO,CAACqC,WAAD,CAAP,CACAG,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCV,MAAM,CAACH,QAAP,EAAlC,EACD,CAbD,CAeAzC,UAAU,CAACuD,UAAX,CAAsBX,MAAM,CAACH,QAAP,EAAtB,CAAyCO,gBAAzC,EACD,CACF,CA/DD,CAiEA,GAAMQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBlD,OAAO,CAACmD,IAAR,CAAa,YAAb,EACD,CAFD,CAIA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,GAAItD,IAAI,GAAK,cAAb,CAA6B,CAC3B,MAAOD,CAAAA,KAAK,CAACC,IAAD,CAAL,CAAYG,YAAZ,CAAyB,CAAzB,CAAP,CACD,CACD,GAAIH,IAAI,GAAK,cAAb,CAA6B,CAC3B,MAAOD,CAAAA,KAAK,CAACC,IAAD,CAAL,CAAYkC,WAAnB,CACD,CACD,MAAOnC,CAAAA,KAAK,CAACC,IAAD,CAAL,CAAYK,MAAnB,CACD,CARD,CAUA,mBACE,KAAC,eAAD,EACE,aAAa,cACX,KAAC,OAAD,EACE,YAAY,CAAEc,YADhB,CAEE,WAAW,CAAEF,WAFf,CAGE,WAAW,CAAEmC,WAHf,CAIE,YAAY,CAAEE,eAAe,EAJ/B,EAFJ,CASE,cAAc,cACZ,KAAC,GAAD,EACE,KAAK,CAAEvD,KAAK,CAACC,IAAD,CAAL,CAAYuD,KADrB,CAEE,WAAW,CAAExD,KAAK,CAACC,IAAD,CAAL,CAAY6B,WAF3B,CAGE,QAAQ,CAAE9B,KAAK,CAACC,IAAD,CAAL,CAAY4B,QAHxB,EAVJ,EADF,CAmBD,CAED,GAAM4B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLtD,YAAY,CAAEsD,KAAK,CAACC,gBAAN,CAAuBvD,YADhC,CAELC,YAAY,CAAEqD,KAAK,CAACC,gBAAN,CAAuBtD,YAFhC,CAGLC,MAAM,CAAEoD,KAAK,CAACC,gBAAN,CAAuBrD,MAH1B,CAAP,CAKD,CAND,CAQA,GAAMsD,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLtD,eAAe,CAAE,yBAACuD,OAAD,QAAaD,CAAAA,QAAQ,CAAClE,OAAO,CAACY,eAAR,CAAwBuD,OAAxB,CAAD,CAArB,EADZ,CAELtD,eAAe,CAAE,yBAACsD,OAAD,QAAaD,CAAAA,QAAQ,CAAClE,OAAO,CAACa,eAAR,CAAwBsD,OAAxB,CAAD,CAArB,EAFZ,CAGLrD,SAAS,CAAE,mBAACqD,OAAD,QAAaD,CAAAA,QAAQ,CAAClE,OAAO,CAACc,SAAR,CAAkBqD,OAAlB,CAAD,CAArB,EAHN,CAILpD,OAAO,CAAE,iBAACoD,OAAD,QAAaD,CAAAA,QAAQ,CAAClE,OAAO,CAACe,OAAR,CAAgBoD,OAAhB,CAAD,CAArB,EAJJ,CAAP,CAMD,CAPD,CASA,cAAepE,CAAAA,OAAO,CAAC+D,eAAD,CAAkBG,kBAAlB,CAAP,CAA6C7D,WAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AQI from \"../../components/organisms/AQI/AQI\";\nimport LandingTemplate from \"../../components/templates/LandingTempalte/LandingTemplate\";\nimport Stepper from \"../../components/organisms/stepper/Stepper\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport * as jobService from \"../../service/JobService\";\nimport { jobResource } from \"../../service/JobService\";\n\nfunction LandingPage(props) {\n  const [view, setView] = useState(\"yourLocation\");\n  const history = useHistory();\n\n  const {\n    yourLocation,\n    jobLocations,\n    skills,\n    addYourLocation,\n    addJobLocations,\n    addSkills,\n    addJobs,\n  } = props;\n\n  const aqiValues = {\n    Hyderabad: \"793\",\n    Banglore: \"982\",\n    Mumbai: \"999\",\n    Delhi: \"676\",\n    Chennai: \"876\",\n    Vizag: \"545\",\n  };\n\n  const handleClick = (step) => {\n    if (step === 0) {\n      setView(\"yourLocation\");\n    }\n\n    if (step === 1) {\n      setView(\"jobLocations\");\n    } else if (step === 2) {\n      setView(\"skills\");\n    }\n  };\n\n  const handleChange = (value, accessKey, isHomeLocation) => {\n    if (accessKey === \"city\" && isHomeLocation) {\n      const newObj = {\n        number: aqiValues[value.city],\n        showCity: false,\n      };\n\n      const newYourLocation = {\n        ...yourLocation,\n        counters: [...yourLocation.counters, newObj],\n        description: \"Real - Time Air Quality Index (AQI) in this location\",\n        yourLocation: [value],\n      };\n\n      addYourLocation(newYourLocation);\n    }\n\n    if (accessKey === \"city\" && isHomeLocation === false) {\n      const newCounters = value.map((item) => ({\n        number: aqiValues[item.city],\n        showCity: true,\n        city: item.city,\n      }));\n\n      const newJobLocations = {\n        ...jobLocations,\n        counters: newCounters,\n        description: \"Real - Time Air Quality Index (AQI) in this location\",\n        jobLocation: value,\n      };\n\n      addJobLocations(newJobLocations);\n    }\n\n    if (accessKey === \"skill\") {\n      const jobRoles = value.map((item) => item.skill);\n\n      const jobLocation = jobLocations.jobLocation\n        .map((item) => item.city)\n        .toString();\n\n      const url = new URL(jobResource);\n      const params = new URLSearchParams(url.search);\n      params.set(\"city\", jobLocation);\n      params.set(\"jobTitle\", jobRoles);\n\n      const actionDispatcher = (res) => {\n        const jobsFromAPI = res;\n\n        const newSkills = {\n          ...skills,\n          counters: [{ number: jobsFromAPI.length, showCity: false }],\n          description: \"Jobs found in these locations\",\n          skills: value,\n        };\n\n        addSkills(newSkills);\n        addJobs(jobsFromAPI);\n        localStorage.setItem(\"jobsQuery\", params.toString());\n      };\n\n      jobService.getAllJobs(params.toString(), actionDispatcher);\n    }\n  };\n\n  const handleRoute = () => {\n    history.push(\"/jobsearch\");\n  };\n\n  const getDefaultValue = () => {\n    if (view === \"yourLocation\") {\n      return props[view].yourLocation[0];\n    }\n    if (view === \"jobLocations\") {\n      return props[view].jobLocation;\n    }\n    return props[view].skills;\n  };\n\n  return (\n    <LandingTemplate\n      leftContainer={\n        <Stepper\n          handleChange={handleChange}\n          handleClick={handleClick}\n          handleRoute={handleRoute}\n          defaultValue={getDefaultValue()}\n        />\n      }\n      rightContainer={\n        <AQI\n          image={props[view].image}\n          description={props[view].description}\n          counters={props[view].counters}\n        />\n      }\n    />\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    yourLocation: state.onBoardingFilter.yourLocation,\n    jobLocations: state.onBoardingFilter.jobLocations,\n    skills: state.onBoardingFilter.skills,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addYourLocation: (payload) => dispatch(actions.addYourLocation(payload)),\n    addJobLocations: (payload) => dispatch(actions.addJobLocations(payload)),\n    addSkills: (payload) => dispatch(actions.addSkills(payload)),\n    addJobs: (payload) => dispatch(actions.addJobs(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n"]},"metadata":{},"sourceType":"module"}